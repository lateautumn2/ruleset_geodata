name: Build ruleset and geodata
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/config.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "domains_download_url=https://raw.githubusercontent.com/DustinWin/domain-list-custom/domains" >> ${GITHUB_ENV}
          echo "ips_download_url=https://github.com/DustinWin/geoip/releases/download/ips" >> ${GITHUB_ENV}      
          echo "add_download_url=https://raw.githubusercontent.com/lateautumn2/ruleset_geodata/master/template" >> ${GITHUB_ENV}
        shell: bash

      - name: Clone Repository
        uses: actions/checkout@master

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout DustinWin/geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/geoip
          ref: clash
          path: geoip/clash

      - name: Checkout DustinWin/geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/geoip
          ref: sing-box
          path: geoip/sing-box

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.22'
          cache-dependency-path: ./community/go.sum

      - name: Generate `clash` geodata
        run: |
          mkdir -p ./community/mydata/
          archs1=(ads private microsoft-cn apple-cn google-cn games-cn ai networktest netflix disney max primevideo appletv youtube tiktok bilibili proxy cn)
          archs2=(ads private microsoft-cn apple-cn google-cn games-cn ai networktest proxy cn)
          for ((i = 0; i < 18; i++)); do
            curl -sSL "${domains_download_url}/${archs1[i]}.list" | grep -Ev 'DOMAIN-REGEX,|PROCESS-' | sed -e '/^\s*$/d' -e 's/^DOMAIN,/full:/' -e 's/^DOMAIN-SUFFIX,//' -e 's/^DOMAIN-KEYWORD,/keyword:/' > "./community/mydata/${archs1[i]}"
          done
          curl -sSL "${domains_download_url}/fakeip-filter.list" | grep -v 'PROCESS-' | sed -e '/^\s*$/d' -e 's/^DOMAIN,/full:/' -e 's/^DOMAIN-SUFFIX,//' -e 's/^DOMAIN-KEYWORD,/keyword:/' -e 's/^DOMAIN-REGEX,/regexp:/' > ./community/mydata/fakeip-filter
          cd ./community/
          go run ./ --datapath=./mydata/ --outputname geosite-all.dat

          # Generate `clash` geosite-all-lite.dat
          rm -f ./mydata/ads
          go run ./ --datapath=./mydata/ --outputname geosite-all-lite.dat

          # Generate `clash` geosite.dat
          rm -f ./mydata/*
          for ((i = 0; i < 10; i++)); do
            curl -sSL "${domains_download_url}/${archs2[i]}.list" | grep -Ev 'DOMAIN-REGEX,|PROCESS-' | sed -e '/^\s*$/d' -e 's/^DOMAIN,/full:/' -e 's/^DOMAIN-SUFFIX,//' -e 's/^DOMAIN-KEYWORD,/keyword:/' > "./mydata/${archs2[i]}"
          done
          curl -sSL "${domains_download_url}/fakeip-filter.list" | grep -v 'PROCESS-' | sed -e '/^\s*$/d' -e 's/^DOMAIN,/full:/' -e 's/^DOMAIN-SUFFIX,//' -e 's/^DOMAIN-KEYWORD,/keyword:/' -e 's/^DOMAIN-REGEX,/regexp:/' > ./mydata/fakeip-filter
          go run ./ --datapath=./mydata/ --outputname geosite.dat

          # Generate `clash` geosite-lite.dat
          rm -f ./mydata/ads
          go run ./ --datapath=./mydata/ --outputname geosite-lite.dat

      - name: Generate `sing-box` geodata
        run: |
          cd ./community/ || exit 1
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          for file in $(ls *.dat | sed 's/\..*//'); do
            geo convert site -i v2ray -o sing -f "./${file}.db" "./${file}.dat"
          done

      - name: Get geoip relative files
        run: |
          mkdir -p ./clash/ ./sing-box/
          # Download Clash geoip files (.mmdb)
          clash_mmdb=($(curl -sSL https://api.github.com/repos/DustinWin/geoip/releases | grep '"browser_download_url"' | grep '.mmdb' | awk -F'"' '{print $4}'))
          count_clash_mmdb=${#clash_mmdb[@]}
          for ((i = 0; i < count_clash_mmdb; i++)); do
            wget -P ./clash/ "${clash_mmdb[i]}"
          done

          # Download Clash other geoip files (except .mmdb)
          clash_others=($(curl -sSL https://api.github.com/repos/DustinWin/geoip/releases | grep '"browser_download_url"' | grep '/clash/' | grep -v '.mmdb' | awk -F'"' '{print $4}'))
          count_clash_others=${#clash_others[@]}
          for ((i = 0; i < count_clash_others; i++)); do
            wget -P ./community/ "${clash_others[i]}"
          done

          # Download sing-box all geoip files
          singbox_all=($(curl -sSL https://api.github.com/repos/DustinWin/geoip/releases | grep '"browser_download_url"' | grep '/sing-box/' | awk -F'"' '{print $4}'))
          count_singbox_all=${#singbox_all[@]}
          for ((i = 0; i < count_singbox_all; i++)); do
            wget -P ./community/ "${singbox_all[i]}"
          done

      - name: Move `clash` and `sing-box` geodata files
        run: |
          cd ./community/ || exit 1
          for file in $(ls *.dat *.metadb); do
            install -Dp "./${file}" ../clash/
          done
          for file in $(ls *.db); do
            install -Dp "./${file}" ../sing-box/
          done
          rm -rf ../community*

      - name: Generate `clash` rule-set
        run: |
          mkdir -p ./clash-ruleset/ ./sing-box-ruleset/
          curl -o data.txt https://raw.githubusercontent.com/lateautumn2/ruleset_geodata/master/addList
          readarray -t lines < data.txt
          domains=(ads private microsoft-cn apple-cn google-cn games-cn ai netflix disney max primevideo appletv youtube tiktok bilibili proxy cn)
          archs=(fakeip-filter applications networktest)
          ips=(netflixip telegramip privateip cnip)
  
          # Generate `clash` rule-set (yaml)
          for ((i = 0; i < 17; i++)); do
            echo 'payload:' > "./clash-ruleset/${domains[i]}.yaml"
            curl -sSL "${domains_download_url}/${domains[i]}.list" | grep -e 'DOMAIN' | sed 's/^/  - /' >> "./clash-ruleset/${domains[i]}.yaml"
          done

          for ((i = 0; i < 3; i++)); do
            echo 'payload:' > "./clash-ruleset/${archs[i]}.yaml"
            curl -sSL "${domains_download_url}/${archs[i]}.list" | sed 's/^/  - /' >> "./clash-ruleset/${archs[i]}.yaml"
          done

          for ((i = 0; i < 4; i++)); do
            echo 'payload:' > "./clash-ruleset/${ips[i]}.yaml"
            curl -sSL "${ips_download_url}/${ips[i]}.list" | grep -e 'IP' | sed 's/^/  - /' >> "./clash-ruleset/${ips[i]}.yaml"
          done

          for ((i = 0; i < ${#lines[@]}; i++)); do
            echo 'payload:' > "./clash-ruleset/${lines[i]}.yaml"
            curl -sSL "${add_download_url}/${lines[i]}.list" | sed 's/^/  - /' >> "./clash-ruleset/${lines[i]}.yaml"
          done

          # Generate `clash` rule-set (text)
          for ((i = 0; i < 17; i++)); do
            curl -sSL "${domains_download_url}/${domains[i]}.list" | grep -e 'DOMAIN'  > "./clash-ruleset/${domains[i]}.list"
          done

          for ((i = 0; i < 3; i++)); do
            curl -sSL "${domains_download_url}/${archs[i]}.list"  > "./clash-ruleset/${archs[i]}.list"
          done

          for ((i = 0; i < 4; i++)); do
            curl -sSL "${ips_download_url}/${ips[i]}.list" | grep -e 'IP' > "./clash-ruleset/${ips[i]}.list"
          done

          for ((i = 0; i < ${#lines[@]}; i++)); do
            curl -sSL "${add_download_url}/${lines[i]}.list" > "./clash-ruleset/${lines[i]}.list"
          done

          # Ready for generate `sing-box` rule_set
          for ((i = 0; i < 17; i++)); do
            mkdir -p "./tools/rules/${domains[i]}/"
            curl "${domains_download_url}/${domains[i]}.list" | grep -v 'DOMAIN-REGEX,' | sed '/^\s*$/d' > "./tools/rules/${domains[i]}/${domains[i]}.yaml"
          done

          for ((i = 0; i < 3; i++)); do
            mkdir -p "./tools/rules/${archs[i]}/"
            curl "${domains_download_url}/${archs[i]}.list" > "./tools/rules/${archs[i]}/${archs[i]}.yaml"
          done

          for ((i = 0; i < 4; i++)); do
            mkdir -p "./tools/rules/${ips[i]}/"
            curl -sSL "${ips_download_url}/${ips[i]}.list"| grep 'IP-CIDR' > "./tools/rules/${ips[i]}/${ips[i]}.yaml"
          done

          for ((i = 0; i < ${#lines[@]}; i++)); do
            mkdir -p "./tools/rules/${lines[i]}/"
            curl -sSL "${add_download_url}/${lines[i]}.list" > "./tools/rules/${lines[i]}/${lines[i]}.yaml"
          done

      - name: Download and unzip `sing-box core`
        run: |
          sing_box_version=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases | grep 'tag_name' | grep 'alpha' | head -n 1 | sed -e 's/.*v//' -e 's/".*//')
          wget "https://github.com/SagerNet/sing-box/releases/download/v${sing_box_version}/sing-box-${sing_box_version}-linux-amd64.tar.gz" -O - | tar -zxf - -C ./tools/
          mv -f ./tools/sing-box-${sing_box_version}-linux-amd64/sing-box ./tools/

      - name: Generate `sing-box` rule_set
        run: |
          cd ./tools/
          chmod +x convert.sh && ./convert.sh
          rm -rf ./sing-box* LICENSE ./rules*
          mv -f ./*.json ./*.srs ../sing-box-ruleset/

      - name: Release and upload `clash` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: clash
          tag: clash
          overwrite: true
          body: "[Clash](https://github.com/Dreamacro/clash) 规则集文件（包含 .dat、.mmdb 和 .metadb 文件）"
          file_glob: true
          file: ./clash/*

      - name: Git push assets to "clash" branch
        run: |
          cd ./clash/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b clash
          git add .
          git commit -m "Clash ruleset_geodata 文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin clash

      - name: Commit and push `clash-ruleset` branch
        run: |
          cd ./clash-ruleset/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b clash-ruleset
          git add . && git commit -m "Clash rule-set 规则集文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin clash-ruleset

      - name: Release and upload `sing-box` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box
          tag: sing-box
          overwrite: true
          body: "[sing-box](https://github.com/SagerNet/sing-box) 规则集文件（包含 .db 文件）"
          file_glob: true
          file: ./sing-box/*

      - name: Git push assets to "sing-box" branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add .
          git commit -m "sing-box ruleset_geodata 文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Commit and push `sing-box-ruleset` branch
        run: |
          cd ./sing-box-ruleset/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b sing-box-ruleset
          git add . && git commit -m "sing-box rule_set 规则集文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box-ruleset

      - name: Purge jsDelivr CDN
        run: |
          cd ./clash/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@clash/${file}"
          done
          cd ../clash-ruleset/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@clash-ruleset/${file}"
          done
          cd ../sing-box/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/${file}"
          done
          cd ../sing-box-ruleset/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box-ruleset/${file}"
          done
